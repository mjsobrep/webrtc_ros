ARG ROS_VERSION=melodic

FROM ros:${ROS_VERSION}
ARG ROS_VERSION

RUN echo "building ${ROS_VERSION}"

# ROS dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        ros-${ROS_VERSION}-cv-bridge \
    && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        git\
        curl\
        wget

RUN wget http://techslides.com/demos/sample-videos/small.mp4 -O /tmp/small.mp4

RUN apt-get install -y --no-install-recommends gmodule-2.0 libgtk-3-dev libglib2.0-dev pulseaudio libasound2-dev libpulse-dev ros-${ROS_VERSION}-image-transport ninja-build stow

RUN if [ "$ROS_VERSION" = "noetic" ]; then apt-get install -y --no-install-recommends python2 && update-alternatives --install /usr/bin/python python /usr/bin/python2 1; fi

WORKDIR /home/3rdparty/jsoncpp/
RUN git clone https://github.com/open-source-parsers/jsoncpp.git . && \
    mkdir build && \
    cd build && \
    cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_STATIC_LIBS=ON -DBUILD_SHARED_LIBS=OFF -DARCHIVE_INSTALL_DIR=. -G "Unix Makefiles" .. &&  \
    make && \
    make install

ENV LD_LIBRARY_PATH /usr/local/lib/:$LD_LIBRARY_PATH

WORKDIR /home/webrtc_ws
COPY . /home/webrtc_ws/src/

RUN git clone https://github.com/GT-RAIL/async_web_server_cpp.git /home/webrtc_ws/src/async_web_server_cpp/

RUN apt-get update -y && apt-get install -y --no-install-recommends ros-${ROS_VERSION}-camera-info-manager
RUN git clone --depth 1 https://github.com/ros-drivers/video_stream_opencv.git /home/webrtc_ws/src/video_stream_opencv/

RUN /ros_entrypoint.sh catkin_make_isolated \
    && sed -i '$isource "/home/webrtc_ws/devel_isolated/webrtc/setup.bash"' /ros_entrypoint.sh \
    && sed -i '$isource "/home/webrtc_ws/devel_isolated/webrtc_ros/setup.bash"' /ros_entrypoint.sh

COPY dockerfiles/test-script.sh test-script.sh
RUN chmod +x test-script.sh

EXPOSE 8080

CMD ./test-script.sh
